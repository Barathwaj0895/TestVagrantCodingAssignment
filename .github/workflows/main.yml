# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: List Current Directory
        run: ls -a

      - name: List in Target Folder
        run:  |
          cd target
          ls -a
          
      - name: Test with Maven Part 1
        run: mvn clean test

      - name: Test with Maven
        run: mvn -B package --file pom.xml test
        
      - name: Test Reporter
  # You may pin to the exact commit or the version.
  # uses: dorny/test-reporter@0d00bb14cb0cc2c9b8985df6e81dd333188224e1
  uses: dorny/test-reporter@v1.5.0
  with:
    # Name or regex of artifact containing test results
    artifact: # optional
    # Name of the check run
    name: 
    # Coma separated list of paths to test results 
    # Supports wildcards via [fast-glob](https://github.com/mrmlnc/fast-glob) All matched result files must be of same format

    path: 
    # The fast-glob library that is internally used interprets backslashes as escape characters.
    # If enabled, all backslashes in provided path will be replaced by forward slashes and act as directory separators.
    # It might be useful when path input variable is composed dynamically from existing directory paths on Windows.

    path-replace-backslashes: # optional, default is false
    # Format of test results. Supported options:
  - dart-json
  - dotnet-trx
  - flutter-json
  - java-junit
  - jest-junit
  - mocha-json

    reporter: 
    # Limits which test suites are listed. Supported options:
  - all
  - only-failed

    list-suites: # default is all
    # Limits which test cases are listed. Supported options:
  - all
  - only-failed
  - none

    list-tests: # default is all
    # Limits number of created annotations with error message and stack trace captured during test execution.
Must be less or equal to 50.

    max-annotations: # default is 10
    # Set this action as failed if test report contain any failed test
    fail-on-error: # default is true
    # Relative path under $GITHUB_WORKSPACE where the repository was checked out
    working-directory: # optional
    # Allows you to generate only the summary.
If enabled, the report will contain a table listing each test results file and the number of passed, failed, and skipped tests.
Detailed listing of test suites and test cases will be skipped.

    only-summary: # optional, default is false
    # GitHub Access Token
    token: # optional, default is ${{ github.token }}
